{
    "sourceFile": "public/app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1732125672568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732125735980,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+const urlParams = new URLSearchParams(window.location.search);\r\n+const username = urlParams.get('username');\r\n+const room = urlParams.get('room');\r\n+\r\n+document.getElementById('roomName').innerText = `Room: ${room}`;\r\n+\r\n+const ws = new WebSocket(`ws://${window.location.hostname}:5500`);\r\n+ws.onopen = () => {\r\n+\r\n+  ws.send(JSON.stringify({ type: 'join', username, room }));\r\n+  ws.send(JSON.stringify({ type: 'getRooms' })); // Request available rooms\r\n+};\r\n+\r\n+ws.onmessage = (event) => {\r\n+  const message = JSON.parse(event.data);\r\n+  const chatMessages = document.getElementById('chatMessages');\r\n+\r\n+  if (message.type === 'error') {\r\n+    alert(message.message);\r\n+    window.location.href = '/';\r\n+    return;\r\n+  }\r\n+\r\n+  const messageDiv = document.createElement('div');\r\n+  if (message.type === 'chat') {\r\n+    messageDiv.innerHTML = `<strong>${message.username}</strong>: ${message.message} <small>${message.timestamp}</small>`;\r\n+  } else if (message.type === 'system') {\r\n+    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n+  } else if (message.type === 'success') {\r\n+    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n+  }\r\n+\r\n+  chatMessages.appendChild(messageDiv);\r\n+  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n+};\r\n+\r\n+document.getElementById('messageForm').addEventListener('submit', (e) => {\r\n+  e.preventDefault();\r\n+  const messageInput = document.getElementById('messageInput');\r\n+  ws.send(JSON.stringify({ type: 'message', text: messageInput.value }));\r\n+  messageInput.value = '';\r\n+});\r\n"
                },
                {
                    "date": 1732125753044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+const urlParams = new URLSearchParams(window.location.search);\r\n+const username = urlParams.get('username');\r\n+const room = urlParams.get('room');\r\n+\r\n+document.getElementById('roomName').innerText = `Room: ${room}`;\r\n+\r\n+const ws = new WebSocket(`ws://${window.location.hostname}:5500`);\r\n+ws.onopen = () => {\r\n+  ws.send(JSON.stringify({ type: 'join', username, room }));\r\n+  ws.send(JSON.stringify({ type: *'getRooms' })); // Request available rooms\r\n+};\r\n+\r\n+ws.onmessage = (event) => {\r\n+  const message = JSON.parse(event.data);\r\n+  const chatMessages = document.getElementById('chatMessages');\r\n+\r\n+  if (message.type === 'error') {\r\n+    alert(message.message);\r\n+    window.location.href = '/';\r\n+    return;\r\n+  }\r\n+\r\n+  const messageDiv = document.createElement('div');\r\n+  if (message.type === 'chat') {\r\n+    messageDiv.innerHTML = `<strong>${message.username}</strong>: ${message.message} <small>${message.timestamp}</small>`;\r\n+  } else if (message.type === 'system') {\r\n+    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n+  } else if (message.type === 'success') {\r\n+    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n+  }\r\n+\r\n+  chatMessages.appendChild(messageDiv);\r\n+  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n+};\r\n+\r\n+document.getElementById('messageForm').addEventListener('submit', (e) => {\r\n+  e.preventDefault();\r\n+  const messageInput = document.getElementById('messageInput');\r\n+  ws.send(JSON.stringify({ type: 'message', text: messageInput.value }));\r\n+  messageInput.value = '';\r\n+});\r\n"
                },
                {
                    "date": 1732125818033,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,102 +6,14 @@\n \r\n const ws = new WebSocket(`ws://${window.location.hostname}:5500`);\r\n ws.onopen = () => {\r\n   ws.send(JSON.stringify({ type: 'join', username, room }));\r\n-  ws.send(JSON.stringify({ type: *'getRooms' })); // Request available rooms\r\n-};\r\n-\r\n-ws.onmessage = (event) => {\r\n-  const message = JSON.parse(event.data);\r\n-  const chatMessages = document.getElementById('chatMessages');\r\n-\r\n-  if (message.type === 'error') {\r\n-    alert(message.message);\r\n-    window.location.href = '/';\r\n-    return;\r\n-  }\r\n-\r\n-  const messageDiv = document.createElement('div');\r\n-  if (message.type === 'chat') {\r\n-    messageDiv.innerHTML = `<strong>${message.username}</strong>: ${message.message} <small>${message.timestamp}</small>`;\r\n-  } else if (message.type === 'system') {\r\n-    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n-  } else if (message.type === 'success') {\r\n-    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n-  }\r\n-\r\n-  chatMessages.appendChild(messageDiv);\r\n-  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n-};\r\n-\r\n-document.getElementById('messageForm').addEventListener('submit', (e) => {\r\n-  e.preventDefault();\r\n-  const messageInput = document.getElementById('messageInput');\r\n-  ws.send(JSON.stringify({ type: 'message', text: messageInput.value }));\r\n-  messageInput.value = '';\r\n-});\r\n-const urlParams = new URLSearchParams(window.location.search);\r\n-const username = urlParams.get('username');\r\n-const room = urlParams.get('room');\r\n-\r\n-document.getElementById('roomName').innerText = `Room: ${room}`;\r\n-\r\n-const ws = new WebSocket(`ws://${window.location.hostname}:5500`);\r\n-ws.onopen = () => {\r\n-\r\n-  ws.send(JSON.stringify({ type: 'join', username, room }));\r\n   ws.send(JSON.stringify({ type: 'getRooms' })); // Request available rooms\r\n };\r\n \r\n ws.onmessage = (event) => {\r\n   const message = JSON.parse(event.data);\r\n-  const chatMessages = document.getElementById('chatMessages');\r\n-\r\n-  if (message.type === 'error') {\r\n-    alert(message.message);\r\n-    window.location.href = '/';\r\n-    return;\r\n-  }\r\n-\r\n-  const messageDiv = document.createElement('div');\r\n-  if (message.type === 'chat') {\r\n-    messageDiv.innerHTML = `<strong>${message.username}</strong>: ${message.message} <small>${message.timestamp}</small>`;\r\n-  } else if (message.type === 'system') {\r\n-    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n-  } else if (message.type === 'success') {\r\n-    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n-  }\r\n-\r\n-  chatMessages.appendChild(messageDiv);\r\n-  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n-};\r\n-\r\n-document.getElementById('messageForm').addEventListener('submit', (e) => {\r\n-  e.preventDefault();\r\n-  const messageInput = document.getElementById('messageInput');\r\n-  ws.send(JSON.stringify({ type: 'message', text: messageInput.value }));\r\n-  messageInput.value = '';\r\n-});\r\n-const urlParams = new URLSearchParams(window.location.search);\r\n-const username = urlParams.get('username');\r\n-const room = urlParams.get('room');\r\n-\r\n-document.getElementById('roomName').innerText = `Room: ${room}`;\r\n-\r\n-const ws = new WebSocket(`ws://${window.location.hostname}:5500`);\r\n-ws.onopen = () => {\r\n-  ws.send(\r\n-    JSON.stringify({\r\n-      type: 'join',\r\n-      username,\r\n-      room,\r\n-    })\r\n-  );\r\n   \r\n-};\r\n-\r\n-ws.onmessage = (event) => {\r\n-  const message = JSON.parse(event.data);\r\n   const chatMessages = document.getElementById('chatMessages');\r\n \r\n   if (message.type === 'error') {\r\n     alert(message.message);\r\n"
                },
                {
                    "date": 1732125823157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,11 @@\n };\r\n \r\n ws.onmessage = (event) => {\r\n   const message = JSON.parse(event.data);\r\n-  \r\n+  if (message.type === 'roomsList') {\r\n+    displayAvailableRooms(message.rooms); // Implement this function to update the UI\r\n+  }\r\n   const chatMessages = document.getElementById('chatMessages');\r\n \r\n   if (message.type === 'error') {\r\n     alert(message.message);\r\n"
                },
                {
                    "date": 1732126191097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,4 +41,6 @@\n   const messageInput = document.getElementById('messageInput');\r\n   ws.send(JSON.stringify({ type: 'message', text: messageInput.value }));\r\n   messageInput.value = '';\r\n });\r\n+\r\n+\r\n"
                },
                {
                    "date": 1732126206546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,5 +43,5 @@\n   messageInput.value = '';\r\n });\r\n \r\n \r\n-function to displayAvailableRooms\n\\ No newline at end of file\n+function to displayAvailableRooms \n\\ No newline at end of file\n"
                },
                {
                    "date": 1732126215227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+const urlParams = new URLSearchParams(window.location.search);\r\n+const username = urlParams.get('username');\r\n+const room = urlParams.get('room');\r\n+\r\n+document.getElementById('roomName').innerText = `Room: ${room}`;\r\n+\r\n+const ws = new WebSocket(`ws://${window.location.hostname}:5500`);\r\n+ws.onopen = () => {\r\n+  ws.send(JSON.stringify({ type: 'join', username, room }));\r\n+  ws.send(JSON.stringify({ type: 'getRooms' })); // Request available rooms\r\n+};\r\n+\r\n+ws.onmessage = (event) => {\r\n+  const message = JSON.parse(event.data);\r\n+  if (message.type === 'roomsList') {\r\n+    displayAvailableRooms(message.rooms); // Implement this function to update the UI\r\n+  }\r\n+  const chatMessages = document.getElementById('chatMessages');\r\n+\r\n+  if (message.type === 'error') {\r\n+    alert(message.message);\r\n+    window.location.href = '/';\r\n+    return;\r\n+  }\r\n+\r\n+  const messageDiv = document.createElement('div');\r\n+  if (message.type === 'chat') {\r\n+    messageDiv.innerHTML = `<strong>${message.username}</strong>: ${message.message} <small>${message.timestamp}</small>`;\r\n+  } else if (message.type === 'system') {\r\n+    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n+  } else if (message.type === 'success') {\r\n+    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n+  }\r\n+\r\n+  chatMessages.appendChild(messageDiv);\r\n+  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n+};\r\n+\r\n+document.getElementById('messageForm').addEventListener('submit', (e) => {\r\n+  e.preventDefault();\r\n+  const messageInput = document.getElementById('messageInput');\r\n+  ws.send(JSON.stringify({ type: 'message', text: messageInput.value }));\r\n+  messageInput.value = '';\r\n+});\r\n+\r\n+\r\n+// function to displayAvailableRooms \r\n+\r\n+function displayAvailableRooms(rooms) {\r\n+  const availableRoomsDiv = document.getElementById('availableRooms');\r\n+  availableRoomsDiv.innerHTML = ''; // Clear previous room list\r\n+\r\n+  if (rooms.length === 0) {\r\n+    availableRoomsDiv.innerHTML = '<p>No available rooms.</p>';\r\n+    return;\r\n+  }\r\n+\r\n+  const roomList = document.createElement('ul'); // Create a list for the rooms\r\n+\r\n+  rooms.forEach(room => {\r\n+    const listItem = document.createElement('li');\r\n+    listItem.textContent = room; // Set the room name as the text\r\n+    roomList.appendChild(listItem); // Add the room to the list\r\n+  });\r\n+\r\n+  availableRoomsDiv.appendChild(roomList); // Append the list to the available rooms div\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1732125672568,
            "name": "Commit-0",
            "content": "const urlParams = new URLSearchParams(window.location.search);\r\nconst username = urlParams.get('username');\r\nconst room = urlParams.get('room');\r\n\r\ndocument.getElementById('roomName').innerText = `Room: ${room}`;\r\n\r\nconst ws = new WebSocket(`ws://${window.location.hostname}:5500`);\r\nws.onopen = () => {\r\n  ws.send(\r\n    JSON.stringify({\r\n      type: 'join',\r\n      username,\r\n      room,\r\n    })\r\n  );\r\n  \r\n};\r\n\r\nws.onmessage = (event) => {\r\n  const message = JSON.parse(event.data);\r\n  const chatMessages = document.getElementById('chatMessages');\r\n\r\n  if (message.type === 'error') {\r\n    alert(message.message);\r\n    window.location.href = '/';\r\n    return;\r\n  }\r\n\r\n  const messageDiv = document.createElement('div');\r\n  if (message.type === 'chat') {\r\n    messageDiv.innerHTML = `<strong>${message.username}</strong>: ${message.message} <small>${message.timestamp}</small>`;\r\n  } else if (message.type === 'system') {\r\n    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n  } else if (message.type === 'success') {\r\n    messageDiv.innerHTML = `<em>${message.message}</em>`;\r\n  }\r\n\r\n  chatMessages.appendChild(messageDiv);\r\n  chatMessages.scrollTop = chatMessages.scrollHeight;\r\n};\r\n\r\ndocument.getElementById('messageForm').addEventListener('submit', (e) => {\r\n  e.preventDefault();\r\n  const messageInput = document.getElementById('messageInput');\r\n  ws.send(JSON.stringify({ type: 'message', text: messageInput.value }));\r\n  messageInput.value = '';\r\n});\r\n"
        }
    ]
}